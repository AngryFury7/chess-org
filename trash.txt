export const Update = () => {
    //console.log(document.querySelectorAll(".movable"))
    // in this function i will try to update the position of the function ;
    document.querySelectorAll(".Active").forEach((value,index) => {
        value.addEventListener('click',() => {
           let currentX =  Number(value.getAttribute("X"));
           let currentY =  Number(value.getAttribute("Y"));
           let NewX ;
           let NewY ;
           let typeofPeice ; 
           let colorofPeice ;
           let indexDecider ;
           let classcolorofPeice;
           let colorofenemy ;
           let classcolorofenemy;
           if(value.classList.contains("whiteP")){colorofPeice = "white"}
           if(value.classList.contains("blackP")){colorofPeice = "black"}
           if(value.classList.contains("whiteP")){classcolorofPeice = "whiteP"};
           if(value.classList.contains("blackP")){classcolorofPeice = "blackP"};

           if(value.classList.contains("whiteP")){colorofenemy = "black"}
           if(value.classList.contains("blackP")){colorofenemy = "white"}
           if(value.classList.contains("whiteP")){classcolorofenemy = "blackP"};
           if(value.classList.contains("blackP")){classcolorofenemy = "whiteP"}


           //first i will have to check the type of the Active clicked ;
           let Classes = ["El" , "Hr" , "Cm" , "Pw" , "Kn" , "Qn"];
            for(let i = 0 ; i<= 5 ; i++)
            {
                if(value.classList.contains(Classes[i]))
                {
                    typeofPeice = Classes[i];
                    indexDecider = i; // 0 , 1, 2 , 3 , 4 , 5 
                }
            }

            // remove these things from the item : .Active , .TypeofPeice , .colorofPeice , svg of it
            // add these things to new Position : ".Active" , .typeofP ,color , svg of it 
            // call the cleanup function on click of these items 
           document.querySelectorAll(".movable").forEach((value,index) => {
            value.addEventListener('click',() => {
                cleanUp();
                 NewX =  Number(value.getAttribute("X"));
                 NewY =  Number(value.getAttribute("Y"));;
                 cleanUp();
                 Search(currentX,currentY).classList.remove("Active");
                 Search(currentX,currentY).classList.remove(typeofPeice);
                 Search(currentX,currentY).classList.remove(classcolorofPeice);
                 Search(NewX,NewY).classList.add("Active");
                 Search(NewX,NewY).classList.add(typeofPeice);
                 Search(NewX,NewY).classList.add(classcolorofPeice);
                 if(indexDecider === 3){
                    Search(currentX,currentY).firstElementChild.setAttribute('src',"");
                    Search(NewX,NewY).firstElementChild.setAttribute('src',`./svgs/${colorofPeice}_pawn.svg`);

                 }

                 if(indexDecider === 0){
                    Search(currentX,currentY).firstElementChild.setAttribute('src',"");
                    Search(NewX,NewY).firstElementChild.setAttribute('src',`./svgs/${colorofPeice}_elephant.svg`);

                 }

                 if(indexDecider === 1){
                    Search(currentX,currentY).firstElementChild.setAttribute('src',"");
                    Search(NewX,NewY).firstElementChild.setAttribute('src',`./svgs/${colorofPeice}_horse.svg`);
                    console.log("added the image");

                 }

                 if(indexDecider === 2){
                    Search(currentX,currentY).firstElementChild.setAttribute('src',"");
                    Search(NewX,NewY).firstElementChild.setAttribute('src',`./svgs/${colorofPeice}_camel.svg`)

                 }

                 if(indexDecider === 4){
                    Search(currentX,currentY).firstElementChild.setAttribute('src',"");
                    Search(NewX,NewY).firstElementChild.setAttribute('src',`./svgs/${colorofPeice}_king.svg`)

                 }

                 if(indexDecider === 5){
                    Search(currentX,currentY).firstElementChild.setAttribute('src',"");
                    Search(NewX,NewY).firstElementChild.setAttribute('src',`./svgs/${colorofPeice}_queen.svg`)

                 }

                 Testing();
                 
            })
           })

           // in this i will have to remove the existing Peice on the ground ; // enemy 
           // put new peice of that place //
           // remove peice from existing place /// Attacker 
            document.querySelectorAll(".enemyMove").forEach((value,index) => {
            value.addEventListener('click',() => {

                let typeofenemy ;
                let Classes = ["El" , "Hr" , "Cm" , "Pw" , "Kn" , "Qn"];
                for(let i = 0 ; i<= 5 ; i++)
                {
                    if(value.classList.contains(Classes[i]))
                    {
                        typeofenemy = Classes[i];
                    }
                }

                
                 NewX =  Number(value.getAttribute("X"));
                 NewY =  Number(value.getAttribute("Y"));;
                 Search(currentX,currentY).classList.remove("Active");
                 Search(currentX,currentY).classList.remove(typeofPeice);
                 Search(currentX,currentY).classList.remove(classcolorofPeice);

                 Search(NewX,NewY).classList.remove(typeofenemy);
                 Search(NewX,NewY).classList.remove(classcolorofenemy);

                 Search(NewX,NewY).classList.add(typeofPeice);
                 Search(NewX,NewY).classList.add(classcolorofPeice);

                 Search(NewX,NewY).firstElementChild.setAttribute('src',"");

                 if(indexDecider === 3){
                    Search(currentX,currentY).firstElementChild.setAttribute('src',"");
                    Search(NewX,NewY).firstElementChild.setAttribute('src',`./svgs/${colorofPeice}_pawn.svg`)
                 }

                 if(indexDecider === 0){
                    Search(currentX,currentY).firstElementChild.setAttribute('src',"");
                    Search(NewX,NewY).firstElementChild.setAttribute('src',`./svgs/${colorofPeice}_elephant.svg`)
                 }

                 if(indexDecider === 1){
                    Search(currentX,currentY).firstElementChild.setAttribute('src',"");
                    Search(NewX,NewY).firstElementChild.setAttribute('src',`./svgs/${colorofPeice}_horse.svg`)
                 }

                 if(indexDecider === 2){
                    Search(currentX,currentY).firstElementChild.setAttribute('src',"");
                    Search(NewX,NewY).firstElementChild.setAttribute('src',`./svgs/${colorofPeice}_camel.svg`)
                 }

                 if(indexDecider === 4){
                    Search(currentX,currentY).firstElementChild.setAttribute('src',"");
                    Search(NewX,NewY).firstElementChild.setAttribute('src',`./svgs/${colorofPeice}_king.svg`)
                 }

                 if(indexDecider === 5){
                    Search(currentX,currentY).firstElementChild.setAttribute('src',"");
                    Search(NewX,NewY).firstElementChild.setAttribute('src',`./svgs/${colorofPeice}_queen.svg`)
                 }

                 Testing();

            })
           }) 
        })
    })
}





{

            }